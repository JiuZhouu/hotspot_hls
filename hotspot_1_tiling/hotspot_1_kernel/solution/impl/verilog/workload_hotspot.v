// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module workload_hotspot (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        result_address0,
        result_ce0,
        result_we0,
        result_d0,
        temp_address0,
        temp_ce0,
        temp_q0,
        temp_address1,
        temp_ce1,
        temp_q1,
        power_address0,
        power_ce0,
        power_q0,
        which_boundary
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_pp0_stage1 = 5'd4;
parameter    ap_ST_fsm_pp0_stage2 = 5'd8;
parameter    ap_ST_fsm_state57 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] result_address0;
output   result_ce0;
output   result_we0;
output  [31:0] result_d0;
output  [15:0] temp_address0;
output   temp_ce0;
input  [31:0] temp_q0;
output  [15:0] temp_address1;
output   temp_ce1;
input  [31:0] temp_q1;
output  [14:0] power_address0;
output   power_ce0;
input  [31:0] power_q0;
input  [2:0] which_boundary;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg result_ce0;
reg result_we0;
reg[15:0] temp_address0;
reg temp_ce0;
reg[15:0] temp_address1;
reg temp_ce1;
reg power_ce0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] indvar_flatten_reg_157;
reg   [6:0] r_reg_168;
reg   [9:0] c_reg_179;
wire   [0:0] cmp3_not_fu_215_p2;
reg   [0:0] cmp3_not_reg_454;
wire   [0:0] cmp18_not_fu_221_p2;
reg   [0:0] cmp18_not_reg_459;
wire   [0:0] icmp_ln9_fu_227_p2;
reg   [0:0] icmp_ln9_reg_464;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
wire    ap_block_state17_pp0_stage0_iter5;
wire    ap_block_state20_pp0_stage0_iter6;
wire    ap_block_state23_pp0_stage0_iter7;
wire    ap_block_state26_pp0_stage0_iter8;
wire    ap_block_state29_pp0_stage0_iter9;
wire    ap_block_state32_pp0_stage0_iter10;
wire    ap_block_state35_pp0_stage0_iter11;
wire    ap_block_state38_pp0_stage0_iter12;
wire    ap_block_state41_pp0_stage0_iter13;
wire    ap_block_state44_pp0_stage0_iter14;
wire    ap_block_state47_pp0_stage0_iter15;
wire    ap_block_state50_pp0_stage0_iter16;
wire    ap_block_state53_pp0_stage0_iter17;
wire    ap_block_state56_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln9_reg_464_pp0_iter1_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter2_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter3_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter4_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter5_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter6_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter7_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter8_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter9_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter10_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter11_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter12_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter13_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter14_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter15_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter16_reg;
reg   [0:0] icmp_ln9_reg_464_pp0_iter17_reg;
wire   [15:0] add_ln9_fu_233_p2;
reg   [15:0] add_ln9_reg_468;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln10_fu_239_p2;
reg   [0:0] icmp_ln10_reg_473;
wire   [9:0] select_ln9_fu_245_p3;
reg   [9:0] select_ln9_reg_479;
wire   [6:0] add_ln9_1_fu_253_p2;
reg   [6:0] add_ln9_1_reg_489;
wire   [6:0] select_ln9_1_fu_259_p3;
reg   [6:0] select_ln9_1_reg_495;
wire   [5:0] trunc_ln9_fu_267_p1;
reg   [5:0] trunc_ln9_reg_500;
wire   [0:0] cmp4_not6_fu_271_p2;
reg   [0:0] cmp4_not6_reg_505;
wire   [0:0] cmp19_not5_fu_277_p2;
reg   [0:0] cmp19_not5_reg_510;
wire   [15:0] add_ln12_fu_338_p2;
reg   [15:0] add_ln12_reg_515;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state12_pp0_stage1_iter3;
wire    ap_block_state15_pp0_stage1_iter4;
wire    ap_block_state18_pp0_stage1_iter5;
wire    ap_block_state21_pp0_stage1_iter6;
wire    ap_block_state24_pp0_stage1_iter7;
wire    ap_block_state27_pp0_stage1_iter8;
wire    ap_block_state30_pp0_stage1_iter9;
wire    ap_block_state33_pp0_stage1_iter10;
wire    ap_block_state36_pp0_stage1_iter11;
wire    ap_block_state39_pp0_stage1_iter12;
wire    ap_block_state42_pp0_stage1_iter13;
wire    ap_block_state45_pp0_stage1_iter14;
wire    ap_block_state48_pp0_stage1_iter15;
wire    ap_block_state51_pp0_stage1_iter16;
wire    ap_block_state54_pp0_stage1_iter17;
wire    ap_block_pp0_stage1_11001;
wire   [14:0] add_ln13_fu_344_p2;
reg   [14:0] add_ln13_reg_524;
reg   [14:0] add_ln13_reg_524_pp0_iter1_reg;
reg   [14:0] add_ln13_reg_524_pp0_iter2_reg;
reg   [14:0] add_ln13_reg_524_pp0_iter3_reg;
reg   [14:0] add_ln13_reg_524_pp0_iter4_reg;
reg   [14:0] add_ln13_reg_524_pp0_iter5_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state10_pp0_stage2_iter2;
wire    ap_block_state13_pp0_stage2_iter3;
wire    ap_block_state16_pp0_stage2_iter4;
wire    ap_block_state19_pp0_stage2_iter5;
wire    ap_block_state22_pp0_stage2_iter6;
wire    ap_block_state25_pp0_stage2_iter7;
wire    ap_block_state28_pp0_stage2_iter8;
wire    ap_block_state31_pp0_stage2_iter9;
wire    ap_block_state34_pp0_stage2_iter10;
wire    ap_block_state37_pp0_stage2_iter11;
wire    ap_block_state40_pp0_stage2_iter12;
wire    ap_block_state43_pp0_stage2_iter13;
wire    ap_block_state46_pp0_stage2_iter14;
wire    ap_block_state49_pp0_stage2_iter15;
wire    ap_block_state52_pp0_stage2_iter16;
wire    ap_block_state55_pp0_stage2_iter17;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] top_1_reg_544;
reg   [31:0] bottom_1_reg_554;
wire   [9:0] add_ln10_fu_423_p2;
reg   [9:0] add_ln10_reg_559;
reg   [31:0] center_reg_564;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] center_reg_564_pp0_iter2_reg;
reg   [31:0] center_reg_564_pp0_iter3_reg;
reg   [31:0] center_reg_564_pp0_iter4_reg;
reg   [31:0] center_reg_564_pp0_iter5_reg;
reg   [31:0] center_reg_564_pp0_iter6_reg;
reg   [31:0] center_reg_564_pp0_iter7_reg;
reg   [31:0] center_reg_564_pp0_iter8_reg;
reg   [31:0] center_reg_564_pp0_iter9_reg;
reg   [31:0] center_reg_564_pp0_iter10_reg;
reg   [31:0] center_reg_564_pp0_iter11_reg;
reg   [31:0] center_reg_564_pp0_iter12_reg;
reg   [31:0] center_reg_564_pp0_iter13_reg;
reg   [31:0] center_reg_564_pp0_iter14_reg;
reg   [31:0] center_reg_564_pp0_iter15_reg;
reg   [31:0] right_reg_571;
reg   [31:0] left_reg_581;
wire   [31:0] grp_fu_203_p2;
reg   [31:0] mul_reg_586;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] mul_reg_586_pp0_iter3_reg;
wire   [31:0] grp_fu_190_p2;
reg   [31:0] add_reg_591;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] sub2_reg_596;
reg   [31:0] add2_reg_601;
reg   [31:0] mul3_reg_606;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] mul3_reg_606_pp0_iter5_reg;
reg   [31:0] mul3_reg_606_pp0_iter6_reg;
reg   [31:0] mul3_reg_606_pp0_iter7_reg;
reg   [31:0] mul3_reg_606_pp0_iter8_reg;
reg   [31:0] mul3_reg_606_pp0_iter9_reg;
reg   [31:0] mul3_reg_606_pp0_iter10_reg;
wire   [31:0] grp_fu_195_p2;
reg   [31:0] sub_reg_611;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] sub1_reg_616;
reg    ap_enable_reg_pp0_iter6;
wire   [63:0] zext_ln13_fu_450_p1;
reg   [63:0] zext_ln13_reg_621;
reg   [63:0] zext_ln13_reg_621_pp0_iter7_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter8_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter9_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter10_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter11_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter12_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter13_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter14_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter15_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter16_reg;
reg   [63:0] zext_ln13_reg_621_pp0_iter17_reg;
reg   [31:0] power_load_reg_631;
wire   [31:0] grp_fu_209_p2;
reg   [31:0] mul1_reg_636;
reg   [31:0] mul2_reg_641;
reg    ap_enable_reg_pp0_iter7;
reg   [31:0] mul2_reg_641_pp0_iter8_reg;
wire   [31:0] grp_fu_199_p2;
reg   [31:0] add1_reg_646;
reg    ap_enable_reg_pp0_iter9;
reg   [31:0] add3_reg_651;
reg    ap_enable_reg_pp0_iter11;
reg   [31:0] add4_reg_656;
reg    ap_enable_reg_pp0_iter13;
reg   [31:0] delta_reg_661;
reg    ap_enable_reg_pp0_iter15;
reg   [31:0] add5_reg_666;
reg    ap_enable_reg_pp0_iter17;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter18;
reg   [15:0] ap_phi_mux_indvar_flatten_phi_fu_161_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] ap_phi_mux_r_phi_fu_172_p4;
reg   [9:0] ap_phi_mux_c_phi_fu_183_p4;
wire   [63:0] zext_ln13_1_fu_362_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln15_1_fu_392_p1;
wire   [63:0] zext_ln12_1_fu_397_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln12_2_fu_418_p1;
wire   [63:0] zext_ln12_3_fu_445_p1;
reg   [31:0] grp_fu_190_p0;
reg   [31:0] grp_fu_190_p1;
reg   [31:0] grp_fu_195_p0;
reg   [31:0] grp_fu_195_p1;
reg   [31:0] grp_fu_199_p0;
reg   [31:0] grp_fu_199_p1;
reg   [31:0] grp_fu_203_p0;
reg   [31:0] grp_fu_203_p1;
reg   [31:0] grp_fu_209_p0;
wire   [14:0] p_mid2_fu_283_p3;
wire   [0:0] cmp4_not_mid1_fu_294_p2;
wire   [0:0] select_ln9_2_fu_299_p3;
wire   [0:0] cmp19_not_mid1_fu_310_p2;
wire   [0:0] select_ln9_3_fu_315_p3;
wire   [9:0] xor_ln12_fu_329_p2;
wire   [15:0] zext_ln12_fu_334_p1;
wire   [15:0] zext_ln9_fu_290_p1;
wire   [14:0] c_cast_fu_326_p1;
wire   [0:0] or_ln9_fu_305_p2;
wire   [15:0] add_ln13_cast_fu_350_p1;
wire   [15:0] top_fu_354_p3;
wire   [10:0] or_ln_fu_367_p3;
wire   [15:0] zext_ln15_fu_374_p1;
wire   [0:0] or_ln9_1_fu_321_p2;
wire   [15:0] add_ln15_fu_378_p2;
wire   [15:0] bottom_fu_384_p3;
wire   [0:0] icmp_ln14_fu_401_p2;
wire   [15:0] add_ln14_fu_406_p2;
wire   [15:0] select_ln14_fu_411_p3;
wire   [0:0] icmp_ln16_fu_428_p2;
wire   [15:0] add_ln16_fu_433_p2;
wire   [15:0] select_ln16_fu_438_p3;
reg   [1:0] grp_fu_190_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage1_00001;
reg   [1:0] grp_fu_195_opcode;
wire    ap_CS_fsm_state57;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
end

workload_faddfsub_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_7_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_190_p0),
    .din1(grp_fu_190_p1),
    .opcode(grp_fu_190_opcode),
    .ce(1'b1),
    .dout(grp_fu_190_p2)
);

workload_faddfsub_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_7_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_195_p0),
    .din1(grp_fu_195_p1),
    .opcode(grp_fu_195_opcode),
    .ce(1'b1),
    .dout(grp_fu_195_p2)
);

workload_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_199_p0),
    .din1(grp_fu_199_p1),
    .ce(1'b1),
    .dout(grp_fu_199_p2)
);

workload_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_203_p0),
    .din1(grp_fu_203_p1),
    .ce(1'b1),
    .dout(grp_fu_203_p2)
);

workload_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_209_p0),
    .din1(32'd1036831949),
    .ce(1'b1),
    .dout(grp_fu_209_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter17 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_reg_179 <= add_ln10_reg_559;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_reg_179 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_157 <= add_ln9_reg_468;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_157 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_reg_168 <= select_ln9_1_reg_495;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_reg_168 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add1_reg_646 <= grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add2_reg_601 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln9_reg_464_pp0_iter11_reg == 1'd0))) begin
        add3_reg_651 <= grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln9_reg_464_pp0_iter13_reg == 1'd0))) begin
        add4_reg_656 <= grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln9_reg_464_pp0_iter17_reg == 1'd0))) begin
        add5_reg_666 <= grp_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln9_reg_464 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln10_reg_559 <= add_ln10_fu_423_p2;
        bottom_1_reg_554 <= temp_q0;
        top_1_reg_544 <= temp_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln9_reg_464 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln12_reg_515 <= add_ln12_fu_338_p2;
        add_ln13_reg_524 <= add_ln13_fu_344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln13_reg_524_pp0_iter1_reg <= add_ln13_reg_524;
        add_ln13_reg_524_pp0_iter2_reg <= add_ln13_reg_524_pp0_iter1_reg;
        add_ln13_reg_524_pp0_iter3_reg <= add_ln13_reg_524_pp0_iter2_reg;
        add_ln13_reg_524_pp0_iter4_reg <= add_ln13_reg_524_pp0_iter3_reg;
        add_ln13_reg_524_pp0_iter5_reg <= add_ln13_reg_524_pp0_iter4_reg;
        mul2_reg_641_pp0_iter8_reg <= mul2_reg_641;
        mul_reg_586_pp0_iter3_reg <= mul_reg_586;
        zext_ln13_reg_621_pp0_iter10_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter9_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter11_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter10_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter12_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter11_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter13_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter12_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter14_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter13_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter15_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter14_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter16_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter15_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter17_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter16_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter7_reg[14 : 0] <= zext_ln13_reg_621[14 : 0];
        zext_ln13_reg_621_pp0_iter8_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter7_reg[14 : 0];
        zext_ln13_reg_621_pp0_iter9_reg[14 : 0] <= zext_ln13_reg_621_pp0_iter8_reg[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_fu_227_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln9_1_reg_489 <= add_ln9_1_fu_253_p2;
        cmp19_not5_reg_510 <= cmp19_not5_fu_277_p2;
        cmp4_not6_reg_505 <= cmp4_not6_fu_271_p2;
        icmp_ln10_reg_473 <= icmp_ln10_fu_239_p2;
        select_ln9_reg_479 <= select_ln9_fu_245_p3;
        trunc_ln9_reg_500 <= trunc_ln9_fu_267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln9_reg_468 <= add_ln9_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_reg_591 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        center_reg_564 <= temp_q0;
        right_reg_571 <= temp_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        center_reg_564_pp0_iter10_reg <= center_reg_564_pp0_iter9_reg;
        center_reg_564_pp0_iter11_reg <= center_reg_564_pp0_iter10_reg;
        center_reg_564_pp0_iter12_reg <= center_reg_564_pp0_iter11_reg;
        center_reg_564_pp0_iter13_reg <= center_reg_564_pp0_iter12_reg;
        center_reg_564_pp0_iter14_reg <= center_reg_564_pp0_iter13_reg;
        center_reg_564_pp0_iter15_reg <= center_reg_564_pp0_iter14_reg;
        center_reg_564_pp0_iter2_reg <= center_reg_564;
        center_reg_564_pp0_iter3_reg <= center_reg_564_pp0_iter2_reg;
        center_reg_564_pp0_iter4_reg <= center_reg_564_pp0_iter3_reg;
        center_reg_564_pp0_iter5_reg <= center_reg_564_pp0_iter4_reg;
        center_reg_564_pp0_iter6_reg <= center_reg_564_pp0_iter5_reg;
        center_reg_564_pp0_iter7_reg <= center_reg_564_pp0_iter6_reg;
        center_reg_564_pp0_iter8_reg <= center_reg_564_pp0_iter7_reg;
        center_reg_564_pp0_iter9_reg <= center_reg_564_pp0_iter8_reg;
        icmp_ln9_reg_464 <= icmp_ln9_fu_227_p2;
        icmp_ln9_reg_464_pp0_iter10_reg <= icmp_ln9_reg_464_pp0_iter9_reg;
        icmp_ln9_reg_464_pp0_iter11_reg <= icmp_ln9_reg_464_pp0_iter10_reg;
        icmp_ln9_reg_464_pp0_iter12_reg <= icmp_ln9_reg_464_pp0_iter11_reg;
        icmp_ln9_reg_464_pp0_iter13_reg <= icmp_ln9_reg_464_pp0_iter12_reg;
        icmp_ln9_reg_464_pp0_iter14_reg <= icmp_ln9_reg_464_pp0_iter13_reg;
        icmp_ln9_reg_464_pp0_iter15_reg <= icmp_ln9_reg_464_pp0_iter14_reg;
        icmp_ln9_reg_464_pp0_iter16_reg <= icmp_ln9_reg_464_pp0_iter15_reg;
        icmp_ln9_reg_464_pp0_iter17_reg <= icmp_ln9_reg_464_pp0_iter16_reg;
        icmp_ln9_reg_464_pp0_iter1_reg <= icmp_ln9_reg_464;
        icmp_ln9_reg_464_pp0_iter2_reg <= icmp_ln9_reg_464_pp0_iter1_reg;
        icmp_ln9_reg_464_pp0_iter3_reg <= icmp_ln9_reg_464_pp0_iter2_reg;
        icmp_ln9_reg_464_pp0_iter4_reg <= icmp_ln9_reg_464_pp0_iter3_reg;
        icmp_ln9_reg_464_pp0_iter5_reg <= icmp_ln9_reg_464_pp0_iter4_reg;
        icmp_ln9_reg_464_pp0_iter6_reg <= icmp_ln9_reg_464_pp0_iter5_reg;
        icmp_ln9_reg_464_pp0_iter7_reg <= icmp_ln9_reg_464_pp0_iter6_reg;
        icmp_ln9_reg_464_pp0_iter8_reg <= icmp_ln9_reg_464_pp0_iter7_reg;
        icmp_ln9_reg_464_pp0_iter9_reg <= icmp_ln9_reg_464_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        cmp18_not_reg_459 <= cmp18_not_fu_221_p2;
        cmp3_not_reg_454 <= cmp3_not_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_464_pp0_iter14_reg == 1'd0))) begin
        delta_reg_661 <= grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        left_reg_581 <= temp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul1_reg_636 <= grp_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul2_reg_641 <= grp_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul3_reg_606 <= grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul3_reg_606_pp0_iter10_reg <= mul3_reg_606_pp0_iter9_reg;
        mul3_reg_606_pp0_iter5_reg <= mul3_reg_606;
        mul3_reg_606_pp0_iter6_reg <= mul3_reg_606_pp0_iter5_reg;
        mul3_reg_606_pp0_iter7_reg <= mul3_reg_606_pp0_iter6_reg;
        mul3_reg_606_pp0_iter8_reg <= mul3_reg_606_pp0_iter7_reg;
        mul3_reg_606_pp0_iter9_reg <= mul3_reg_606_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_reg_586 <= grp_fu_203_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        power_load_reg_631 <= power_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_fu_227_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln9_1_reg_495 <= select_ln9_1_fu_259_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sub1_reg_616 <= grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub2_reg_596 <= grp_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sub_reg_611 <= grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_464_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        zext_ln13_reg_621[14 : 0] <= zext_ln13_fu_450_p1[14 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_227_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_phi_fu_183_p4 = add_ln10_reg_559;
    end else begin
        ap_phi_mux_c_phi_fu_183_p4 = c_reg_179;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_161_p4 = add_ln9_reg_468;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_161_p4 = indvar_flatten_reg_157;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_phi_fu_172_p4 = select_ln9_1_reg_495;
    end else begin
        ap_phi_mux_r_phi_fu_172_p4 = r_reg_168;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_464_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_190_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln9_reg_464 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln9_reg_464_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_190_opcode = 2'd0;
    end else begin
        grp_fu_190_opcode = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_190_p0 = right_reg_571;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_190_p0 = 32'd1117782016;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_190_p0 = top_1_reg_544;
        end else begin
            grp_fu_190_p0 = 'bx;
        end
    end else begin
        grp_fu_190_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_190_p1 = left_reg_581;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_190_p1 = center_reg_564;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_190_p1 = bottom_1_reg_554;
        end else begin
            grp_fu_190_p1 = 'bx;
        end
    end else begin
        grp_fu_190_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln9_reg_464_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln9_reg_464_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_195_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln9_reg_464_pp0_iter11_reg == 1'd0))) begin
        grp_fu_195_opcode = 2'd0;
    end else begin
        grp_fu_195_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_195_p0 = add3_reg_651;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_195_p0 = add2_reg_601;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_195_p0 = add_reg_591;
    end else begin
        grp_fu_195_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_195_p1 = mul3_reg_606_pp0_iter10_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_195_p1 = mul_reg_586_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_195_p1 = mul_reg_586;
    end else begin
        grp_fu_195_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_199_p0 = center_reg_564_pp0_iter15_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_199_p0 = add1_reg_646;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_199_p0 = power_load_reg_631;
    end else begin
        grp_fu_199_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_199_p1 = delta_reg_661;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_199_p1 = mul2_reg_641_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_199_p1 = mul1_reg_636;
    end else begin
        grp_fu_199_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_203_p0 = add4_reg_656;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_203_p0 = sub2_reg_596;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_203_p0 = center_reg_564;
    end else begin
        grp_fu_203_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_203_p1 = 32'd1024184164;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_203_p1 = 32'd961334477;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_203_p1 = 32'd1073741824;
    end else begin
        grp_fu_203_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_209_p0 = sub1_reg_616;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_209_p0 = sub_reg_611;
    end else begin
        grp_fu_209_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        power_ce0 = 1'b1;
    end else begin
        power_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_ce0 = 1'b1;
    end else begin
        result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_464_pp0_iter17_reg == 1'd0))) begin
        result_we0 = 1'b1;
    end else begin
        result_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_address0 = zext_ln12_3_fu_445_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        temp_address0 = zext_ln12_1_fu_397_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        temp_address0 = zext_ln15_1_fu_392_p1;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            temp_address1 = zext_ln12_2_fu_418_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            temp_address1 = zext_ln13_1_fu_362_p1;
        end else begin
            temp_address1 = 'bx;
        end
    end else begin
        temp_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        temp_ce0 = 1'b1;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        temp_ce1 = 1'b1;
    end else begin
        temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_227_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1) & (ap_enable_reg_pp0_iter17 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter18 == 1'b1) & (ap_enable_reg_pp0_iter17 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_227_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_423_p2 = (10'd1 + select_ln9_reg_479);

assign add_ln12_fu_338_p2 = (zext_ln12_fu_334_p1 + zext_ln9_fu_290_p1);

assign add_ln13_cast_fu_350_p1 = add_ln13_fu_344_p2;

assign add_ln13_fu_344_p2 = (c_cast_fu_326_p1 + p_mid2_fu_283_p3);

assign add_ln14_fu_406_p2 = (16'd1 + add_ln12_reg_515);

assign add_ln15_fu_378_p2 = (zext_ln15_fu_374_p1 + zext_ln9_fu_290_p1);

assign add_ln16_fu_433_p2 = ($signed(16'd65535) + $signed(add_ln12_reg_515));

assign add_ln9_1_fu_253_p2 = (7'd1 + ap_phi_mux_r_phi_fu_172_p4);

assign add_ln9_fu_233_p2 = (ap_phi_mux_indvar_flatten_phi_fu_161_p4 + 16'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bottom_fu_384_p3 = ((or_ln9_1_fu_321_p2[0:0] === 1'b1) ? add_ln15_fu_378_p2 : add_ln12_fu_338_p2);

assign c_cast_fu_326_p1 = select_ln9_reg_479;

assign cmp18_not_fu_221_p2 = ((which_boundary != 3'd7) ? 1'b1 : 1'b0);

assign cmp19_not5_fu_277_p2 = ((ap_phi_mux_r_phi_fu_172_p4 != 7'd63) ? 1'b1 : 1'b0);

assign cmp19_not_mid1_fu_310_p2 = ((add_ln9_1_reg_489 != 7'd63) ? 1'b1 : 1'b0);

assign cmp3_not_fu_215_p2 = ((which_boundary != 3'd0) ? 1'b1 : 1'b0);

assign cmp4_not6_fu_271_p2 = ((ap_phi_mux_r_phi_fu_172_p4 != 7'd0) ? 1'b1 : 1'b0);

assign cmp4_not_mid1_fu_294_p2 = ((add_ln9_1_reg_489 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln10_fu_239_p2 = ((ap_phi_mux_c_phi_fu_183_p4 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_401_p2 = ((select_ln9_reg_479 == 10'd511) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_428_p2 = ((select_ln9_reg_479 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_227_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_161_p4 == 16'd32768) ? 1'b1 : 1'b0);

assign or_ln9_1_fu_321_p2 = (select_ln9_3_fu_315_p3 | cmp18_not_reg_459);

assign or_ln9_fu_305_p2 = (select_ln9_2_fu_299_p3 | cmp3_not_reg_454);

assign or_ln_fu_367_p3 = {{1'd1}, {select_ln9_reg_479}};

assign p_mid2_fu_283_p3 = {{trunc_ln9_reg_500}, {9'd0}};

assign power_address0 = zext_ln13_fu_450_p1;

assign result_address0 = zext_ln13_reg_621_pp0_iter17_reg;

assign result_d0 = add5_reg_666;

assign select_ln14_fu_411_p3 = ((icmp_ln14_fu_401_p2[0:0] === 1'b1) ? add_ln12_reg_515 : add_ln14_fu_406_p2);

assign select_ln16_fu_438_p3 = ((icmp_ln16_fu_428_p2[0:0] === 1'b1) ? add_ln12_reg_515 : add_ln16_fu_433_p2);

assign select_ln9_1_fu_259_p3 = ((icmp_ln10_fu_239_p2[0:0] === 1'b1) ? add_ln9_1_fu_253_p2 : ap_phi_mux_r_phi_fu_172_p4);

assign select_ln9_2_fu_299_p3 = ((icmp_ln10_reg_473[0:0] === 1'b1) ? cmp4_not_mid1_fu_294_p2 : cmp4_not6_reg_505);

assign select_ln9_3_fu_315_p3 = ((icmp_ln10_reg_473[0:0] === 1'b1) ? cmp19_not_mid1_fu_310_p2 : cmp19_not5_reg_510);

assign select_ln9_fu_245_p3 = ((icmp_ln10_fu_239_p2[0:0] === 1'b1) ? 10'd0 : ap_phi_mux_c_phi_fu_183_p4);

assign top_fu_354_p3 = ((or_ln9_fu_305_p2[0:0] === 1'b1) ? add_ln13_cast_fu_350_p1 : add_ln12_fu_338_p2);

assign trunc_ln9_fu_267_p1 = select_ln9_1_fu_259_p3[5:0];

assign xor_ln12_fu_329_p2 = (select_ln9_reg_479 ^ 10'd512);

assign zext_ln12_1_fu_397_p1 = add_ln12_reg_515;

assign zext_ln12_2_fu_418_p1 = select_ln14_fu_411_p3;

assign zext_ln12_3_fu_445_p1 = select_ln16_fu_438_p3;

assign zext_ln12_fu_334_p1 = xor_ln12_fu_329_p2;

assign zext_ln13_1_fu_362_p1 = top_fu_354_p3;

assign zext_ln13_fu_450_p1 = add_ln13_reg_524_pp0_iter5_reg;

assign zext_ln15_1_fu_392_p1 = bottom_fu_384_p3;

assign zext_ln15_fu_374_p1 = or_ln_fu_367_p3;

assign zext_ln9_fu_290_p1 = p_mid2_fu_283_p3;

always @ (posedge ap_clk) begin
    zext_ln13_reg_621[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter7_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter8_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter9_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter10_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter11_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter12_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter13_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter14_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter15_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter16_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln13_reg_621_pp0_iter17_reg[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //workload_hotspot
