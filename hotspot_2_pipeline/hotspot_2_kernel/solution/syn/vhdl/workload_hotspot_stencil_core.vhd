-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity workload_hotspot_stencil_core is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    temp_top : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_left : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_right : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_bottom : IN STD_LOGIC_VECTOR (31 downto 0);
    temp_center : IN STD_LOGIC_VECTOR (31 downto 0);
    power_center : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of workload_hotspot_stencil_core is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_42A00000 : STD_LOGIC_VECTOR (31 downto 0) := "01000010101000000000000000000000";
    constant ap_const_lv32_3DCCCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111101110011001100110011001101";
    constant ap_const_lv32_394CCCCD : STD_LOGIC_VECTOR (31 downto 0) := "00111001010011001100110011001101";
    constant ap_const_lv32_3D0BCF64 : STD_LOGIC_VECTOR (31 downto 0) := "00111101000010111100111101100100";

attribute shreg_extract : string;
    signal power_center_read_reg_125 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter40 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter44 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter45 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter46 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter47 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter48 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter49 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal power_center_read_reg_125_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_read_reg_125_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter24_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter25_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter26_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter27_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter28_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter29_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter30_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter31_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter32_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter33_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter34_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter35_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter36_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter37_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter38_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter39_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter40_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter41_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_read_reg_130_pp0_iter42_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_58_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_64_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add1_reg_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_70_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add2_reg_169 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_76_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp0_reg_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_80_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_179_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_84_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_assign_reg_189 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_110_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul6_reg_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_88_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_199 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_93_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_assign_1_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_115_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul8_reg_209 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_97_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_assign_2_reg_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_120_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul1_reg_219 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_58_ce : STD_LOGIC;
    signal grp_fu_64_ce : STD_LOGIC;
    signal grp_fu_70_ce : STD_LOGIC;
    signal grp_fu_76_ce : STD_LOGIC;
    signal grp_fu_80_ce : STD_LOGIC;
    signal grp_fu_84_ce : STD_LOGIC;
    signal grp_fu_88_ce : STD_LOGIC;
    signal grp_fu_93_ce : STD_LOGIC;
    signal grp_fu_97_ce : STD_LOGIC;
    signal grp_fu_101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_101_ce : STD_LOGIC;
    signal grp_fu_105_ce : STD_LOGIC;
    signal grp_fu_110_ce : STD_LOGIC;
    signal grp_fu_115_ce : STD_LOGIC;
    signal grp_fu_120_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal temp_top_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_left_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_right_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_bottom_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_center_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal power_center_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (31 downto 0);

    component workload_fadd_32ns_32ns_32_7_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component workload_fsub_32ns_32ns_32_7_full_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component workload_fmul_32ns_32ns_32_4_max_dsp_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fadd_32ns_32ns_32_7_full_dsp_0_U1 : component workload_fadd_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => temp_center_int_reg,
        din1 => temp_center_int_reg,
        ce => grp_fu_58_ce,
        dout => grp_fu_58_p2);

    fadd_32ns_32ns_32_7_full_dsp_0_U2 : component workload_fadd_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => temp_top_int_reg,
        din1 => temp_bottom_int_reg,
        ce => grp_fu_64_ce,
        dout => grp_fu_64_p2);

    fadd_32ns_32ns_32_7_full_dsp_0_U3 : component workload_fadd_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => temp_left_int_reg,
        din1 => temp_right_int_reg,
        ce => grp_fu_70_ce,
        dout => grp_fu_70_p2);

    fsub_32ns_32ns_32_7_full_dsp_0_U4 : component workload_fsub_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add1_reg_164,
        din1 => tmp_reg_158,
        ce => grp_fu_76_ce,
        dout => grp_fu_76_p2);

    fsub_32ns_32ns_32_7_full_dsp_0_U5 : component workload_fsub_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => add2_reg_169,
        din1 => tmp_reg_158,
        ce => grp_fu_80_ce,
        dout => grp_fu_80_p2);

    fadd_32ns_32ns_32_7_full_dsp_0_U6 : component workload_fadd_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => mul_reg_184,
        din1 => power_center_read_reg_125_pp0_iter17_reg,
        ce => grp_fu_84_ce,
        dout => grp_fu_84_p2);

    fsub_32ns_32ns_32_7_full_dsp_0_U7 : component workload_fsub_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_42A00000,
        din1 => temp_center_read_reg_130_pp0_iter20_reg,
        ce => grp_fu_88_ce,
        dout => grp_fu_88_p2);

    fadd_32ns_32ns_32_7_full_dsp_0_U8 : component workload_fadd_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => power_center_assign_reg_189,
        din1 => mul6_reg_194,
        ce => grp_fu_93_ce,
        dout => grp_fu_93_p2);

    fadd_32ns_32ns_32_7_full_dsp_0_U9 : component workload_fadd_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => power_center_assign_1_reg_204,
        din1 => mul8_reg_209,
        ce => grp_fu_97_ce,
        dout => grp_fu_97_p2);

    fadd_32ns_32ns_32_7_full_dsp_0_U10 : component workload_fadd_32ns_32ns_32_7_full_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => mul1_reg_219,
        din1 => temp_center_read_reg_130_pp0_iter42_reg,
        ce => grp_fu_101_ce,
        dout => grp_fu_101_p2);

    fmul_32ns_32ns_32_4_max_dsp_0_U11 : component workload_fmul_32ns_32ns_32_4_max_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp0_reg_174,
        din1 => ap_const_lv32_3DCCCCCD,
        ce => grp_fu_105_ce,
        dout => grp_fu_105_p2);

    fmul_32ns_32ns_32_4_max_dsp_0_U12 : component workload_fmul_32ns_32ns_32_4_max_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp1_reg_179_pp0_iter20_reg,
        din1 => ap_const_lv32_3DCCCCCD,
        ce => grp_fu_110_ce,
        dout => grp_fu_110_p2);

    fmul_32ns_32ns_32_4_max_dsp_0_U13 : component workload_fmul_32ns_32ns_32_4_max_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp2_reg_199,
        din1 => ap_const_lv32_394CCCCD,
        ce => grp_fu_115_ce,
        dout => grp_fu_115_p2);

    fmul_32ns_32ns_32_4_max_dsp_0_U14 : component workload_fmul_32ns_32ns_32_4_max_dsp_0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => power_center_assign_2_reg_214,
        din1 => ap_const_lv32_3D0BCF64,
        ce => grp_fu_120_ce,
        dout => grp_fu_120_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                add1_reg_164 <= grp_fu_64_p2;
                add2_reg_169 <= grp_fu_70_p2;
                mul1_reg_219 <= grp_fu_120_p2;
                mul6_reg_194 <= grp_fu_110_p2;
                mul8_reg_209 <= grp_fu_115_p2;
                mul_reg_184 <= grp_fu_105_p2;
                power_center_assign_1_reg_204 <= grp_fu_93_p2;
                power_center_assign_2_reg_214 <= grp_fu_97_p2;
                power_center_assign_reg_189 <= grp_fu_84_p2;
                power_center_read_reg_125 <= power_center_int_reg;
                power_center_read_reg_125_pp0_iter10_reg <= power_center_read_reg_125_pp0_iter9_reg;
                power_center_read_reg_125_pp0_iter11_reg <= power_center_read_reg_125_pp0_iter10_reg;
                power_center_read_reg_125_pp0_iter12_reg <= power_center_read_reg_125_pp0_iter11_reg;
                power_center_read_reg_125_pp0_iter13_reg <= power_center_read_reg_125_pp0_iter12_reg;
                power_center_read_reg_125_pp0_iter14_reg <= power_center_read_reg_125_pp0_iter13_reg;
                power_center_read_reg_125_pp0_iter15_reg <= power_center_read_reg_125_pp0_iter14_reg;
                power_center_read_reg_125_pp0_iter16_reg <= power_center_read_reg_125_pp0_iter15_reg;
                power_center_read_reg_125_pp0_iter17_reg <= power_center_read_reg_125_pp0_iter16_reg;
                power_center_read_reg_125_pp0_iter1_reg <= power_center_read_reg_125;
                power_center_read_reg_125_pp0_iter2_reg <= power_center_read_reg_125_pp0_iter1_reg;
                power_center_read_reg_125_pp0_iter3_reg <= power_center_read_reg_125_pp0_iter2_reg;
                power_center_read_reg_125_pp0_iter4_reg <= power_center_read_reg_125_pp0_iter3_reg;
                power_center_read_reg_125_pp0_iter5_reg <= power_center_read_reg_125_pp0_iter4_reg;
                power_center_read_reg_125_pp0_iter6_reg <= power_center_read_reg_125_pp0_iter5_reg;
                power_center_read_reg_125_pp0_iter7_reg <= power_center_read_reg_125_pp0_iter6_reg;
                power_center_read_reg_125_pp0_iter8_reg <= power_center_read_reg_125_pp0_iter7_reg;
                power_center_read_reg_125_pp0_iter9_reg <= power_center_read_reg_125_pp0_iter8_reg;
                temp_center_read_reg_130 <= temp_center_int_reg;
                temp_center_read_reg_130_pp0_iter10_reg <= temp_center_read_reg_130_pp0_iter9_reg;
                temp_center_read_reg_130_pp0_iter11_reg <= temp_center_read_reg_130_pp0_iter10_reg;
                temp_center_read_reg_130_pp0_iter12_reg <= temp_center_read_reg_130_pp0_iter11_reg;
                temp_center_read_reg_130_pp0_iter13_reg <= temp_center_read_reg_130_pp0_iter12_reg;
                temp_center_read_reg_130_pp0_iter14_reg <= temp_center_read_reg_130_pp0_iter13_reg;
                temp_center_read_reg_130_pp0_iter15_reg <= temp_center_read_reg_130_pp0_iter14_reg;
                temp_center_read_reg_130_pp0_iter16_reg <= temp_center_read_reg_130_pp0_iter15_reg;
                temp_center_read_reg_130_pp0_iter17_reg <= temp_center_read_reg_130_pp0_iter16_reg;
                temp_center_read_reg_130_pp0_iter18_reg <= temp_center_read_reg_130_pp0_iter17_reg;
                temp_center_read_reg_130_pp0_iter19_reg <= temp_center_read_reg_130_pp0_iter18_reg;
                temp_center_read_reg_130_pp0_iter1_reg <= temp_center_read_reg_130;
                temp_center_read_reg_130_pp0_iter20_reg <= temp_center_read_reg_130_pp0_iter19_reg;
                temp_center_read_reg_130_pp0_iter21_reg <= temp_center_read_reg_130_pp0_iter20_reg;
                temp_center_read_reg_130_pp0_iter22_reg <= temp_center_read_reg_130_pp0_iter21_reg;
                temp_center_read_reg_130_pp0_iter23_reg <= temp_center_read_reg_130_pp0_iter22_reg;
                temp_center_read_reg_130_pp0_iter24_reg <= temp_center_read_reg_130_pp0_iter23_reg;
                temp_center_read_reg_130_pp0_iter25_reg <= temp_center_read_reg_130_pp0_iter24_reg;
                temp_center_read_reg_130_pp0_iter26_reg <= temp_center_read_reg_130_pp0_iter25_reg;
                temp_center_read_reg_130_pp0_iter27_reg <= temp_center_read_reg_130_pp0_iter26_reg;
                temp_center_read_reg_130_pp0_iter28_reg <= temp_center_read_reg_130_pp0_iter27_reg;
                temp_center_read_reg_130_pp0_iter29_reg <= temp_center_read_reg_130_pp0_iter28_reg;
                temp_center_read_reg_130_pp0_iter2_reg <= temp_center_read_reg_130_pp0_iter1_reg;
                temp_center_read_reg_130_pp0_iter30_reg <= temp_center_read_reg_130_pp0_iter29_reg;
                temp_center_read_reg_130_pp0_iter31_reg <= temp_center_read_reg_130_pp0_iter30_reg;
                temp_center_read_reg_130_pp0_iter32_reg <= temp_center_read_reg_130_pp0_iter31_reg;
                temp_center_read_reg_130_pp0_iter33_reg <= temp_center_read_reg_130_pp0_iter32_reg;
                temp_center_read_reg_130_pp0_iter34_reg <= temp_center_read_reg_130_pp0_iter33_reg;
                temp_center_read_reg_130_pp0_iter35_reg <= temp_center_read_reg_130_pp0_iter34_reg;
                temp_center_read_reg_130_pp0_iter36_reg <= temp_center_read_reg_130_pp0_iter35_reg;
                temp_center_read_reg_130_pp0_iter37_reg <= temp_center_read_reg_130_pp0_iter36_reg;
                temp_center_read_reg_130_pp0_iter38_reg <= temp_center_read_reg_130_pp0_iter37_reg;
                temp_center_read_reg_130_pp0_iter39_reg <= temp_center_read_reg_130_pp0_iter38_reg;
                temp_center_read_reg_130_pp0_iter3_reg <= temp_center_read_reg_130_pp0_iter2_reg;
                temp_center_read_reg_130_pp0_iter40_reg <= temp_center_read_reg_130_pp0_iter39_reg;
                temp_center_read_reg_130_pp0_iter41_reg <= temp_center_read_reg_130_pp0_iter40_reg;
                temp_center_read_reg_130_pp0_iter42_reg <= temp_center_read_reg_130_pp0_iter41_reg;
                temp_center_read_reg_130_pp0_iter4_reg <= temp_center_read_reg_130_pp0_iter3_reg;
                temp_center_read_reg_130_pp0_iter5_reg <= temp_center_read_reg_130_pp0_iter4_reg;
                temp_center_read_reg_130_pp0_iter6_reg <= temp_center_read_reg_130_pp0_iter5_reg;
                temp_center_read_reg_130_pp0_iter7_reg <= temp_center_read_reg_130_pp0_iter6_reg;
                temp_center_read_reg_130_pp0_iter8_reg <= temp_center_read_reg_130_pp0_iter7_reg;
                temp_center_read_reg_130_pp0_iter9_reg <= temp_center_read_reg_130_pp0_iter8_reg;
                tmp0_reg_174 <= grp_fu_76_p2;
                tmp1_reg_179 <= grp_fu_80_p2;
                tmp1_reg_179_pp0_iter14_reg <= tmp1_reg_179;
                tmp1_reg_179_pp0_iter15_reg <= tmp1_reg_179_pp0_iter14_reg;
                tmp1_reg_179_pp0_iter16_reg <= tmp1_reg_179_pp0_iter15_reg;
                tmp1_reg_179_pp0_iter17_reg <= tmp1_reg_179_pp0_iter16_reg;
                tmp1_reg_179_pp0_iter18_reg <= tmp1_reg_179_pp0_iter17_reg;
                tmp1_reg_179_pp0_iter19_reg <= tmp1_reg_179_pp0_iter18_reg;
                tmp1_reg_179_pp0_iter20_reg <= tmp1_reg_179_pp0_iter19_reg;
                tmp2_reg_199 <= grp_fu_88_p2;
                tmp_reg_158 <= grp_fu_58_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= grp_fu_101_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                power_center_int_reg <= power_center;
                temp_bottom_int_reg <= temp_bottom;
                temp_center_int_reg <= temp_center;
                temp_left_int_reg <= temp_left;
                temp_right_int_reg <= temp_right;
                temp_top_int_reg <= temp_top;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(grp_fu_101_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= grp_fu_101_p2;
        end if; 
    end process;


    grp_fu_101_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_101_ce <= ap_const_logic_1;
        else 
            grp_fu_101_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_105_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_105_ce <= ap_const_logic_1;
        else 
            grp_fu_105_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_110_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_110_ce <= ap_const_logic_1;
        else 
            grp_fu_110_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_115_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_115_ce <= ap_const_logic_1;
        else 
            grp_fu_115_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_120_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_120_ce <= ap_const_logic_1;
        else 
            grp_fu_120_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_58_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_58_ce <= ap_const_logic_1;
        else 
            grp_fu_58_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_64_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_64_ce <= ap_const_logic_1;
        else 
            grp_fu_64_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_70_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_70_ce <= ap_const_logic_1;
        else 
            grp_fu_70_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_76_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_76_ce <= ap_const_logic_1;
        else 
            grp_fu_76_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_80_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_80_ce <= ap_const_logic_1;
        else 
            grp_fu_80_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_84_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_84_ce <= ap_const_logic_1;
        else 
            grp_fu_84_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_88_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_88_ce <= ap_const_logic_1;
        else 
            grp_fu_88_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_93_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_93_ce <= ap_const_logic_1;
        else 
            grp_fu_93_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_97_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_97_ce <= ap_const_logic_1;
        else 
            grp_fu_97_ce <= ap_const_logic_0;
        end if; 
    end process;

end behav;
